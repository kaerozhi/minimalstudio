---
import { config } from "@/site.config";

const currentPath = Astro.url.pathname;

// 定义导航宽度
const { width = "container-wide" } = Astro.props;
---

<section x-data="{ atTop: true }" class="w-full">
  <!-- Alpine.js initializes data properties for the component. `atTop` determines if the page is scrolled past a certain point. -->
  <div
    class="fixed z-50 px-4 py-2 transition-all duration-1000 rounded-full mt-4 max-w-2xl inset-x-0 transform md:mx-auto"
    :class="{ 'bg-black bg-opacity-90 backdrop-blur-xl max-w-2xl mx-4': !atTop, 'max-w-7xl': atTop }"
    @scroll.window="atTop = (window.pageYOffset > 50 ? false : true)"
  >
    <!-- This div is styled to change its appearance based on the scroll position, toggling classes for background, opacity, blur, and width. -->
    <div
      x-data="{ open: false }"
      class="flex flex-col w-full p-2 mx-auto md:items-center md:justify-between md:flex-row"
    >
      <!-- Another Alpine.js component for handling the navigation menu's open/close state. -->
      <div class="flex flex-row items-center justify-between">
          <a
            class="text-current gap-4 items-center tracking-tighter inline-flex font-bold text-xl"
            href="/"
            title="linke to main page"
          >
            <svg class="h-6" :class="{ 'fill-black': atTop, 'fill-white': !atTop }" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 34.21 20.78">
              <g data-name="logo-group">
                <path class="z" d="m19.89 15.43-4.98-.02 11.8-12.7L8.6 2.65 6.07 5.37l-4.98-.02L6.05 0h28.16L19.88 15.42z"/>
                <path class="z" d="m14.26 5.34 4.98.02L7.41 18.08l18.11.06 2.52-2.72 4.98.02-4.95 5.34-26.47-.09H0L14.26 5.34z"/>
              </g>
            </svg>
          </a>
        <button class="md:hidden focus:outline-none">
          <svg
            class="w-6 h-6"
            :class="{ 'stroke-current': atTop, 'stroke-white': !atTop }"
            fill="none"
            viewBox="0 0 24 24"
            ><path
              :class="{'hidden': open, 'inline-flex': !open }"
              class="inline-flex"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path><path
              :class="{'hidden': !open, 'inline-flex': open }"
              class="hidden"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path></svg
          >
        </button>
      </div>
      <nav
        :class="{'flex': open, 'hidden': !open}"
        class="flex-col flex-grow gap-4 hidden pb-4 md:pb-0 md:flex md:flex-row lg:ml-auto justify-end items-center text-sm"
      >
        <!-- This navigation changes its display based on the `open` state, showing on mobile when `open` is true. -->
        {
          config.header.menu.map((item) => {
            const isActive = currentPath.startsWith(item.link);
            return (
              <a
                href={item.link}
                :class="{ 'text-black': atTop, 'text-white': !atTop }"
                class={`text-white shrink-0 py-0.5 ${isActive ? "border-b-2 border-current font-bold" : ""}`}
              >
                {item.title}
              </a>
            );
          })
        }
        {
          config.header.button.map((item) => (
            <a
              href={item.link}
              class="py-2 w-auto px-4 border-1 h-8 focus:ring-2 rounded-full  duration-300 focus:ring-offset-2 inline-flex items-center justify-center ring-2 focus:ring-black ring-transparent"
              :class="{ 'border-black bg-black hover:bg-white text-white hover:text-black': atTop, 'border-white bg-white hover:border-primary hover:bg-primary text-black hover:text-white': !atTop }"

            >
              {item.title}
            </a>
          ))
        }
      </nav>
    </div>
  </div>
</section>
